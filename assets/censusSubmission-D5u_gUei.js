import{a6 as X,Z as J,a7 as Y,u as O,a1 as z,a8 as Q,f as M,l as _}from"./main-B6dDMunI.js";import{b as Z,f as q}from"./delay-bYoexC4a.js";function ee(e){return e.map(((e,a)=>e.body||X.includes(e.heading.toLowerCase())?`${a?`==${e.heading}==`:""}\n${e.body}`.trim():"")).filter(Boolean).join("\n\n").replace(/\n{3,}/g,"\n\n").replace(/ {2,}/g," ")}function ae({version:e,name:a,image:n,builderlink:i,builder:s,region:t,system:o,planet:r,moon:l,axes:m,glyphs:c,type:d,mode:u,platform:g,farm:p,geobay:y,landingpad:f,arena:b,terminal:w,racetrack:$,censusPlayer:h,censusReddit:I,censusSocial:C,censusDiscord:B,censusFriend:v,arrival:N,renew:A}){return{heading:"",body:`{{Version|${e}}}\n{{Eisvana}}\n{{Base infobox\n| name = ${a}\n| image = ${n}\n| civilized = ${J}\n| researchteam =\n| builderlink = ${i}\n| builder = ${s}\n| galaxy = Eissentam\n| region = ${t}\n| system = ${o}\n| planet = ${r}\n| moon = ${l}\n| axes = ${m}\n| coordinates = {{Glyphs2Coords|${c}}}\n| portalglyphs = ${c}\n| type = ${d}\n| mode = ${u}\n| platform = ${g}\n| release = ${e}\n| farm = ${p}\n| geobay = ${y}\n| landingpad = ${f}\n| arena = ${b}\n| terminal = ${w}\n| racetrack = ${$}\n| censusplayer = ${h}\n| ${I?"censusreddit = "+I:"censussocial = "+C}\n| censusdiscord = ${B}\n| censusfriend = ${v}\n| censusarrival = ${N}\n| censusrenewal = ${A}\n| censusshow = Y\n}}\n'''${a}''' is a player base.`}}function ne({name:e,system:a,planet:n,moon:i}){return{heading:"Summary",body:`'''${e}''' is a [[Habitable Base|player base]], located on the ${i?"moon [["+i+"]] of the ":""}planet [[${n}]] in the [[${a}]] system.`}}function ie({galleryPics:e}){return{heading:"Gallery",body:`<gallery>${e?"\n"+e:""}\n</gallery>`}}function se(e){const a=ae(e),n=ne(e),i=ie(e),{sections:s}=e;return ee([a,n,...s,i])}const E={WEBP:"image/webp",JPEG:"image/jpeg"},T="b25tZXNzYWdlID0gYXN5bmMgKHsgZGF0YTogdCB9KSA9PiB7CiAgdHJ5IHsKICAgIGNvbnN0IHMgPSB7CiAgICAgIHN0YXR1czogInN1Y2Nlc3MiLAogICAgICBkYXRhOiBhd2FpdCBjKHQpCiAgICB9OwogICAgcG9zdE1lc3NhZ2Uocyk7CiAgfSBjYXRjaCAoZSkgewogICAgY29uc3QgciA9IHsKICAgICAgc3RhdHVzOiAiZXJyb3IiLAogICAgICBkYXRhOiBgQ291bGQgbm90IGNvbXByZXNzISAke2UgaW5zdGFuY2VvZiBFcnJvciA/IGUubWVzc2FnZSA6ICIifWAKICAgIH07CiAgICBwb3N0TWVzc2FnZShyKTsKICB9IGZpbmFsbHkgewogICAgY2xvc2UoKTsKICB9Cn07CmFzeW5jIGZ1bmN0aW9uIGMoeyBmaWxlOiB0LCBjb25maWc6IGUgfSkgewogIGNvbnN0IHMgPSBhd2FpdCBjcmVhdGVJbWFnZUJpdG1hcCh0KSwgeyB3aWR0aDogciwgaGVpZ2h0OiBuIH0gPSBzLCBvID0gbmV3IE9mZnNjcmVlbkNhbnZhcyhyLCBuKSwgYSA9IG8uZ2V0Q29udGV4dCgiYml0bWFwcmVuZGVyZXIiKTsKICByZXR1cm4gYSA9PSBudWxsIHx8IGEudHJhbnNmZXJGcm9tSW1hZ2VCaXRtYXAocyksIGF3YWl0IG8uY29udmVydFRvQmxvYihlKTsKfQo=",te=e=>Uint8Array.from(atob(e),(e=>e.charCodeAt(0))),D=typeof window<"u"&&window.Blob&&new Blob(["URL.revokeObjectURL(import.meta.url);",te(T)],{type:"text/javascript;charset=utf-8"});function oe(e){let a;try{if(a=D&&(window.URL||window.webkitURL).createObjectURL(D),!a)throw"";const n=new Worker(a,{type:"module",name:e?.name});return n.addEventListener("error",(()=>{(window.URL||window.webkitURL).revokeObjectURL(a)})),n}catch{return new Worker("data:text/javascript;base64,"+T,{type:"module",name:e?.name})}}async function ce(e){return new Promise(((a,n)=>{const i=new oe;i.postMessage(e),i.onmessage=({data:e})=>{if("error"===e.status)console.error(e.data),n(e.data);else{const n=e.data;a(n)}}}))}async function re(e,a={}){a.type??(a.type=E.JPEG),a.quality??(a.quality=.92);const n={originalType:e.type,...a};return await ce({file:e,config:n})}async function L(e,a=1){if(e.size<Y)return e;const n=E.JPEG,i=n.split("/").at(-1),s=await re(e,{quality:a,type:n}),t=a-.01;if(s.size>Y)return await L(e,t);const o=`${e.name.split(".").slice(0,-1).join(".")}-min.${i}`;return new File([s],o,{type:n})}const K=e=>e.replaceAll(/['"[\]{} ]/g,"_"),u=e=>e?"Yes":"No";function le(e,a){if(!e.file)return;const n=K(a),i=(e.file?.name??e.filename).split(".").at(-1),s=`${n}${e.id}.${i}`;return new File([e.file],s,{type:e.file.type})}async function ge(e){const a=O(),{version:n,baseData:i,playerData:s,imageData:t,region:o,sectionData:r}=a,{image:l,gallery:m}=t,{mode:c,platform:d}=i,{renewals:g}=s;g.includes(z)||g.push(z);const p=[];for(const e of m){const a=le(e,i.baseName);if(!a)continue;const n=await L(a);e.file=n,e.filename=n.name,p.push(n)}const y=m.map((({desc:e,file:a,filename:n})=>e?`${a?.name??n}|${e}`:a?.name??n)).join("\n"),f=s.wikiName?"":s.player,b=`{{profile|${s.wikiName}}}`,w=s.social.split("/").at(-1),$=`[${s.social} ${w}]`,h=s.social?$:b,I=s.reddit?"":h,C=s.social||s.wikiName?I:"",B=l.file?.type,v=(l.file?.name??l.filename).split(".").at(-1),N=`${K(i.baseName)}-main.${v}`,A=l.file?new File([l.file],N,{type:B}):void 0,k=A?await L(A):void 0,G=se({version:n,region:o,name:i.baseName,image:k?.name??l.filename,platform:d??"PC",mode:c??"Normal",builderlink:s.wikiName,builder:f,system:i.system,planet:i.planet,moon:i.moon,axes:i.axes,glyphs:i.glyphs,type:i.type,farm:u(i.farm),arena:u(i.arena),racetrack:u(i.racetrack),geobay:u(i.geobay),terminal:u(i.terminal),landingpad:u(i.landingpad),censusPlayer:s.player,censusDiscord:s.discord,censusReddit:s.reddit,censusSocial:C,censusFriend:s.friend,arrival:s.arrival,renew:g.join(", "),galleryPics:y,sections:r}),Y=new File([G],`${i.baseName}.txt`,{type:"text/plain"}),S=Q(p);S.unshift([Y]),k&&S[0].unshift(k);const j=S.map(me),F={allowed_mentions:{parse:[]},embeds:[{description:e,title:"New Census Submission!",image:{url:`attachment://${k?.name??l.filename}`},fields:[{name:"Player",value:s.player},{name:"Wikipage",value:Z(i.baseName)},{name:"Timezone",value:s.shareTimezone?M:"not disclosed"},{name:"Active Time",value:s.activeTime||"not disclosed"}]}],attachments:[{id:0,filename:k?.name??l.filename}]};k||(delete F.embeds[0].image,delete F.attachments),_||(F.embeds[0].fields=F.embeds[0].fields.slice(0,-2)),j[0].append("payload_json",JSON.stringify(F));const P=j.map(V);await Promise.all(P)}function me(e){const a=new FormData;return e.forEach(((e,n)=>a.append(`files[${n}]`,e))),a}async function pe(e,a,n="No reason given"){const i=new FormData;i.append("payload_json",JSON.stringify({allowed_mentions:{parse:[]},embeds:[{title:"Census Base Change",fields:[{name:"Player",value:e.CensusPlayer},{name:"Old Base",value:Z(e.Name)},{name:"New Base",value:Z(a)},{name:"Reason",value:n}]}]})),V(i)}async function V(e){await fetch(q,{method:"POST",body:e})}export{pe as a,ge as s};
